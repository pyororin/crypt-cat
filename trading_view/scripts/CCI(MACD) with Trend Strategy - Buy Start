// パラメータの「ソース」には「MACD: Signal」を設定すること

//@version=5
strategy("Buy Start - CCI(MACD) with Trend", overlay=true)
length = input.int(2, minval=1)
src = input(hlc3, title="Source")
ma = ta.sma(src, length)
cci = (src - ma) / (0.015 * ta.dev(src, length))
plot(cci, "CCI", color=#2962FF, display=display.none)
band1 = hline(66, "Upper Band", color=#787B86, linestyle=hline.style_dashed, display=display.none)
hline(0, "Middle Band", color=color.new(#787B86, 50), display=display.none)
band0 = hline(-66, "Lower Band", color=#787B86, linestyle=hline.style_dashed, display=display.none)
fill(band1, band0, color=color.rgb(33, 150, 243, 90), title="Background", display=display.none)

ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

typeMA = input.string(title = "Method", defval = "VWMA", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="Smoothing")
smoothingLength = input.int(title = "Length", defval = 4, minval = 1, maxval = 100, group="Smoothing")

// インターバル換算設定
hourInterval = input.int(title="Hour Interval", defval=7, minval=1, group="Trend")

// 最大保有期間
//maxHoldMin = input.int(defval = 10, title = "最大時間(m)", minval = 1)

lastHourClose = request.security(syminfo.tickerid, str.tostring(hourInterval), close)
prevHourClose = request.security(syminfo.tickerid, str.tostring(hourInterval), close[1])

isUpTrend = lastHourClose > prevHourClose
isDownTrend = lastHourClose < prevHourClose

// 購入開始シグナル
buySignal = ta.crossover(cci, -66) and isUpTrend

// 購入後売却シグナル
sellSignal = cci >= 66 and isUpTrend

var float previousEntryPrice = na
var string previousEntryType = na
var int previousEntryTime = na

// 購入エントリー
if (previousEntryType != "Buy" and buySignal)
    strategy.entry("Buy", strategy.long)
    previousEntryPrice := close
    previousEntryType := "Buy"
    previousEntryTime := time_close


// 購入後売却処理開始
if (previousEntryType == "Buy" and sellSignal)
    if (int(previousEntryPrice) < close)
        strategy.entry("Sell", strategy.short)
        previousEntryType := "Sell"
        previousEntryPrice := na

// トレンド転換したらエントリーリセット
if (isUpTrend)
    previousEntryType := na
    previousEntryPrice := na
    strategy.close_all()

// 可視化
plotshape(series=isUpTrend ? 1 : na, title="Up Trend", color=color.green, style=shape.triangleup, location=location.top)
plotshape(series=isDownTrend ? 1 : na, title="Down Trend", color=color.red, style=shape.triangledown, location=location.top)

smoothingLine = ma(cci, smoothingLength, typeMA)
plot(smoothingLine, title="Smoothing Line", color=#f37f20, display=display.none)

plot(previousEntryPrice, title="Previous Entry Price", color=color.blue, linewidth=2, style=plot.style_line)
